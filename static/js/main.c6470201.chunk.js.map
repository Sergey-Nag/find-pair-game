{"version":3,"sources":["components/Button/Button.js","components/Button/index.js","utils/helpers.js","hooks/useCountdownTimer.js","store/game/gameTypes.js","store/player/playerTypes.js","components/GameInfo/GameInfo.js","components/GameInfo/index.js","components/Leaderboard/Leaderboard.js","components/Leaderboard/index.js","utils/gameLevelData.js","assets/img/gamemode-images/easy.svg","assets/img/gamemode-images/medium.svg","assets/img/gamemode-images/hard.svg","components/Loader/Loader.js","utils/gameCardImages.js","assets/img/card-images/android.svg","assets/img/card-images/acer.svg","assets/img/card-images/apple.svg","assets/img/card-images/beats.svg","assets/img/card-images/hp.svg","assets/img/card-images/lenovo.svg","assets/img/card-images/nokia.svg","assets/img/card-images/intel.svg","assets/img/card-images/dell.svg","assets/img/card-images/cisco.svg","assets/img/card-images/htc.svg","components/GameCard/GameCard.js","components/GameCard/index.js","store/cards/cardsTypes.js","components/Playground/Playground.js","components/Playground/index.js","store/cards/cardsActions.js","components/Modal/loginModal.js","store/player/playerActions.js","assets/img/modal-images/game-over.svg","components/Modal/gameOverModal.js","components/Modal/cancelModal.js","components/Modal/pauseModal.js","components/Modal/Modal.js","components/Modal/index.js","pages/Gamepage/Gamepage.js","pages/Gamepage/index.js","components/GameLevelCard/GameLevelCard.js","components/GameLevelCard/index.js","store/gamemode/gamemodeTypes.js","pages/Homepage/Homepage.js","pages/Homepage/index.js","App.js","store/leaderboard/leaderboardTypes.js","store/leaderboard/leaderboardReducer.js","store/gamemode/gamemodeReducer.js","store/cards/cardsReducer.js","store/player/playerReducer.js","store/game/gameReducer.js","store/rootReducer.js","store/index.js","index.js"],"names":["Button","children","clickHandler","variant","isCheckbox","checked","type","className","onClick","formatGameTime","min","sec","getMinutesFromMs","ms","Date","getMinutes","getSecondsFromMs","getSeconds","getMillisecondsFromGameTime","time","setTime","valueOf","createNicknameValid","value","isCorrectlength","length","isCorrectSymbol","test","isNotEmpty","trim","useCountdownTimer","interval","timerRef","useRef","useState","isOver","setIsOver","isTimeIsZero","setTimeIsZero","isReset","setIsReset","isPlaying","setIsPlaying","initialValue","setInitialValue","leftTime","setLeftTime","paused","finished","callbacks","useEffect","restart","newTime","startTimer","useCallback","current","beforeStart","setInterval","console","log","stopTimer","clearInterval","resetTimer","start","pause","stop","START_GAME","PAUSE_GAME","END_GAME","SET_TIME_GAME","START_REMEMBER","SET_NICK_PLAYER","SET_TIME_PLAYER","CLEAR_TIME_PLAYER","GAME_TIME","GameInfo","player","useSelector","state","game","gameTime","setGameTime","dispatch","useDispatch","payload","nickname","Leaderboard","inGame","leaderboard","tableScroll","returnGameTime","returnSortedArr","copiedLeaders","list","push","id","sort","a","b","containerHeight","clientHeight","playerBlock","querySelector","playerHeight","playerPosTop","offsetTop","containerheight","isPlayerPositionOnEndOfBlock","scrollTo","ref","map","gameLevelData","easy","img","layout","rememberTime","medium","hard","Loader","gameMode","gamemode","timer","isStart","percent","setPercent","fullTime","style","width","gameCardImages","android","acer","apple","beats","hp","lenovo","nokia","intel","dell","cisco","htc","GameCard","card","index","isFlipped","name","backgroundImage","PUSH_DATA_CARDS","ADD_TO_COMPARE_CARDS","FLIP_CARD","Playground","level","cards","grid","target","closest","cardId","split","arr","copiedArr","addEventListener","removeEventListener","LoginModal","inputValue","setInputValue","isInputValid","setInputValid","isStartTyping","setStartTyping","timeToRemember","setTimeToRemember","tipText","setTipText","setNickname","nicknameSubmit","e","preventDefault","localStorage","setItem","msToRemember","onSubmit","placeholder","onChange","spellCheck","to","GameOver","score","src","gameOverImage","alt","Cancel","overHandler","item","document","container","display","classList","add","outHandler","remove","Pause","onMouseOver","onMouseOut","onBlur","onFocus","Modal","isLogin","isCancel","isGameOver","isPause","Gamepage","isPlay","setPlay","GameLevelCard","active","onActive","cardData","setCardData","GAMEMODE_CHANGE","Homepage","selectLevel","leaders","App","basename","process","exact","path","LOADING_LEADERBOARD","LOADED_LEADERBOARD","ERROR_LEADERBOARD","CLEAR_ERROR_LEADERBOARD","PUSH_DATA_LEADERBOARD","initialState","Array","i","isLoading","isLoaded","isError","errorMessage","leaderboardReducer","action","gamemodeReducer","compare","el","cardsReducer","playerReducer","gameReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6470201.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.scss';\n\nfunction Button({\n  children, clickHandler, variant, isCheckbox, checked, type,\n}) {\n  return (\n    <button\n      className={`button button__${variant}`}\n      type={type ? 'submit' : 'button'}\n      onClick={clickHandler}\n    >\n      {isCheckbox && (\n        <div className=\"button__box\">\n          <div className={`button__checkbox ${checked ? 'active' : ''}`} />\n          {children}\n        </div>\n      )}\n      {!isCheckbox && children}\n    </button>\n  );\n}\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","const formatGameTime = (min, sec) => `${min < 10 ? '0' : ''}${min}:${sec < 10 ? '0' : ''}${sec}`;\n\nconst getMinutesFromMs = (ms) => new Date(ms).getMinutes();\nconst getSecondsFromMs = (ms) => new Date(ms).getSeconds();\n\nconst getMillisecondsFromGameTime = (min, sec) => {\n  const time = new Date();\n\n  time.setTime((sec * 1000) + (min * 1000 * 60));\n\n  return time.valueOf();\n};\n\nconst isPlayerPositionOnEndOfBlock = (playerBlock, containerheight) => {\n  const { clientHeight, offsetTop } = playerBlock;\n\n  return (offsetTop + clientHeight) > containerheight;\n};\n\nconst createNicknameValid = (value) => ({\n  isCorrectlength: () => value.length > 2 && value.length < 20,\n  isCorrectSymbol: () => !/(')|(\")|(`)|(\\/)|(\\\\)|(:)|(;)|(~)|({)|(})|(\\()|(\\))|(\\[)|(\\])|(\\|)|(,)|(\\*)/g.test(value),\n  isNotEmpty: () => value.trim() !== '',\n});\n\nexport {\n  formatGameTime,\n  getMillisecondsFromGameTime,\n  getMinutesFromMs,\n  getSecondsFromMs,\n  isPlayerPositionOnEndOfBlock,\n  createNicknameValid,\n};\n","import {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { getMillisecondsFromGameTime } from '../utils/helpers';\n\nconst useCountdownTimer = ([min, sec], interval) => {\n  const timerRef = useRef(null);\n  const [isOver, setIsOver] = useState(false);\n  const [isTimeIsZero, setTimeIsZero] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [initialValue, setInitialValue] = useState(getMillisecondsFromGameTime(min, sec));\n  const [leftTime, setLeftTime] = useState(initialValue);\n  const [callbacks] = useState({\n    paused: null, finished: null,\n  });\n\n  useEffect(() => {\n    setTimeIsZero(leftTime === 0);\n  }, [leftTime]);\n\n  const start = () => {\n    setIsOver(false);\n    setIsPlaying(true);\n  };\n  const restart = (newTime) => {\n    setIsPlaying(false);\n    setIsOver(true);\n\n    if (!newTime) return;\n\n    setInitialValue(getMillisecondsFromGameTime(newTime[0], newTime[1]));\n    setIsReset(true);\n  };\n  const pause = () => setIsPlaying(false);\n  const stop = () => setIsOver(true);\n\n  const startTimer = useCallback(() => {\n    if (timerRef.current) return;\n    if (callbacks.beforeStart) callbacks.beforeStart();\n\n    timerRef.current = setInterval(() => {\n      setLeftTime((time) => {\n        console.log('tick');\n        if (time === 0) {\n          restart();\n          return 0;\n        }\n\n        return time - 1000;\n      });\n    }, interval);\n  }, [interval, callbacks]);\n\n  const stopTimer = useCallback(() => {\n    if (!timerRef.current) return;\n\n    clearInterval(timerRef.current);\n    timerRef.current = null;\n    setIsPlaying(false);\n\n    if (!isOver && callbacks.paused && !isTimeIsZero) callbacks.paused();\n  }, [callbacks, isOver, isTimeIsZero]);\n\n  const resetTimer = useCallback(() => {\n    setLeftTime(initialValue);\n  }, [initialValue]);\n\n  useEffect(() => {\n    if (isReset) {\n      resetTimer();\n      setIsReset(false);\n    }\n\n    if (isOver) {\n      stopTimer();\n      if (callbacks.finished && isTimeIsZero) callbacks.finished();\n      return false;\n    }\n\n    if (isPlaying) startTimer();\n    else stopTimer();\n\n    return () => stopTimer();\n  }, [\n    isOver,\n    isReset,\n    isPlaying,\n    startTimer,\n    resetTimer,\n    callbacks,\n    stopTimer,\n    isTimeIsZero,\n  ]);\n\n  return {\n    start,\n    pause,\n    stop,\n    restart,\n    leftTime,\n    callbacks,\n  };\n};\n\nexport default useCountdownTimer;\n","export const START_GAME = 'game/start';\nexport const PAUSE_GAME = 'game/pause';\nexport const END_GAME = 'game/gameOver';\nexport const SET_TIME_GAME = 'game/setTime';\nexport const START_REMEMBER = 'game/startRemember';\n","export const SET_NICK_PLAYER = 'player/setNickname';\nexport const SET_TIME_PLAYER = 'player/setTime';\nexport const CLEAR_TIME_PLAYER = 'player/clearScore';\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useCountdownTimer from '../../hooks/useCountdownTimer';\nimport { SET_TIME_GAME, PAUSE_GAME } from '../../store/game/gameTypes';\nimport { SET_TIME_PLAYER } from '../../store/player/playerTypes';\nimport {\n  formatGameTime,\n  getMinutesFromMs,\n  getSecondsFromMs,\n  getMillisecondsFromGameTime,\n} from '../../utils/helpers';\n\nconst GAME_TIME = [2, 20];\n\nfunction GameInfo() {\n  const player = useSelector((state) => state.player);\n  const game = useSelector((state) => state.game);\n  const [gameTime, setGameTime] = useState('--:--');\n\n  const dispatch = useDispatch();\n  const {\n    start,\n    // stop,\n    pause,\n    // restart,\n    leftTime,\n    callbacks,\n  } = useCountdownTimer(GAME_TIME, 1000);\n\n  useEffect(() => {\n    callbacks.finished = () => {\n      console.log('finished');\n      if (leftTime === 0) dispatch({ type: PAUSE_GAME });\n    };\n    callbacks.paused = () => {\n      console.log('paused');\n    };\n\n    if (game.isPlaying) {\n      start();\n    } else pause();\n  }, [start, pause, callbacks, game.isPlaying, leftTime, dispatch]);\n\n  useEffect(() => {\n    dispatch({\n      type: SET_TIME_GAME,\n      payload: leftTime,\n    });\n\n    dispatch({\n      type: SET_TIME_PLAYER,\n      payload: getMillisecondsFromGameTime(...GAME_TIME) - leftTime,\n    });\n  }, [leftTime, dispatch]);\n\n  useEffect(() => {\n    const min = getMinutesFromMs(game.time);\n    const sec = getSecondsFromMs(game.time);\n\n    setGameTime(formatGameTime(min, sec));\n  }, [game]);\n\n  return (\n    <div className=\"game__info\">\n      <span className=\"game__nickname\">{player.nickname ?? '...'}</span>\n      <span className=\"game__time\">{gameTime}</span>\n    </div>\n  );\n}\n\nexport default GameInfo;\n","import GameInfo from './GameInfo';\n\nexport default GameInfo;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport './Leaderboard.scss';\nimport {\n  formatGameTime,\n  getMinutesFromMs,\n  getSecondsFromMs,\n  isPlayerPositionOnEndOfBlock,\n} from '../../utils/helpers';\n\nfunction Leaderboard({ inGame }) {\n  const leaderboard = useSelector((state) => state.leaderboard);\n  const player = useSelector((state) => state.player);\n  const tableScroll = useRef(null);\n\n  const returnGameTime = useCallback((ms) => {\n    const min = getMinutesFromMs(ms);\n    const sec = getSecondsFromMs(ms);\n\n    return formatGameTime(min, sec);\n  }, []);\n\n  const returnSortedArr = useCallback(() => {\n    const copiedLeaders = [...leaderboard.list];\n\n    if (inGame) {\n      copiedLeaders.push({\n        id: 'player',\n        nickname: player.nickname,\n        time: player.time,\n      });\n    }\n\n    return copiedLeaders.sort((a, b) => a.time - b.time);\n  }, [leaderboard.list, inGame, player]);\n\n  useEffect(() => {\n    if (!inGame) return;\n\n    const containerHeight = tableScroll.current.clientHeight;\n    const playerBlock = tableScroll.current.querySelector('.leaderboard__row_player');\n    const playerHeight = playerBlock.clientHeight;\n    const playerPosTop = playerBlock.offsetTop;\n    if (isPlayerPositionOnEndOfBlock(playerBlock, containerHeight - playerHeight)) {\n      tableScroll.current.scrollTo(\n        0,\n        playerPosTop - containerHeight + playerHeight * 2,\n      );\n    }\n  }, [inGame, player]);\n\n  return (\n    <div className=\"leaderboard\">\n      <div className=\"leaderboard__head\">\n        <div className=\"leaderboard__row\">\n          <div className=\"leaderboard__col leaderboard__col_header\">\n            №\n          </div>\n          <div className=\"leaderboard__col leaderboard__col_header\">Nickname</div>\n          <div className=\"leaderboard__col leaderboard__col_header leaderboard__col_text_right\">\n            Time\n          </div>\n        </div>\n      </div>\n      <div ref={tableScroll} className={`leaderboard__body ${inGame ? '' : 'leaderboard__body_top-players'}`}>\n        {returnSortedArr().map(({\n          id, nickname, time,\n        }) => (\n          <div\n            key={id}\n            className={\n              `leaderboard__row ${(inGame && id === 'player') ? 'leaderboard__row_player' : ''}`\n            }\n          >\n            <div className={`leaderboard__col ${(inGame && id === 'player' && time === 0) ? 'leaderboard__col_no-counter' : ''}`} />\n            <div className=\"leaderboard__col\">{nickname}</div>\n            <div className=\"leaderboard__col leaderboard__col_text_right\">\n              {returnGameTime(time)}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Leaderboard;\n","import Leaderboard from './Leaderboard';\n\nexport default Leaderboard;\n","import easyImage from '../assets/img/gamemode-images/easy.svg';\nimport mediumImage from '../assets/img/gamemode-images/medium.svg';\nimport hardImage from '../assets/img/gamemode-images/hard.svg';\n\nconst gameLevelData = {\n  easy: {\n    img: easyImage,\n    time: [1, 0],\n    layout: '4x4',\n    rememberTime: [0, 10],\n  },\n  medium: {\n    img: mediumImage,\n    time: [2, 20],\n    layout: '8x8',\n    rememberTime: [0, 30],\n  },\n  hard: {\n    img: hardImage,\n    time: [3, 50],\n    layout: '14x10',\n    rememberTime: [0, 50],\n  },\n};\n\nexport default gameLevelData;\n","export default __webpack_public_path__ + \"static/media/easy.448b1a60.svg\";","export default __webpack_public_path__ + \"static/media/medium.57b2e366.svg\";","export default __webpack_public_path__ + \"static/media/hard.b4764cca.svg\";","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Loader.scss';\nimport { getMillisecondsFromGameTime } from '../../utils/helpers';\nimport gameLevelData from '../../utils/gameLevelData';\nimport useCountdownTimer from '../../hooks/useCountdownTimer';\nimport { START_GAME } from '../../store/game/gameTypes';\n\nfunction Loader() {\n  const gameMode = useSelector((state) => state.gamemode);\n  const dispatch = useDispatch();\n  const timer = useCountdownTimer(gameLevelData[gameMode].rememberTime, 1000);\n  const game = useSelector((state) => state.game);\n  const { time, isStart, isPlaying } = game;\n  const [percent, setPercent] = useState(0);\n\n  useEffect(() => {\n    if (isStart) {\n      timer.start();\n      timer.callbacks.finished = () => dispatch({ type: START_GAME });\n    }\n  }, [isStart, timer, dispatch]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const fullTime = getMillisecondsFromGameTime(2, 20);\n      setPercent(100 / (fullTime / time));\n    } else if (isStart) {\n      const fullTime = getMillisecondsFromGameTime(...gameLevelData[gameMode].rememberTime);\n      setPercent(100 / (fullTime / (fullTime - timer.leftTime)));\n    }\n  }, [time, gameMode, isPlaying, isStart, timer]);\n\n  return (\n    <div className=\"loader\">\n      <div\n        className={`loader__line ${isPlaying ? 'loader__countdown' : ''}`}\n        style={{ width: `${percent}%` }}\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","import androidImage from '../assets/img/card-images/android.svg';\nimport acerImage from '../assets/img/card-images/acer.svg';\nimport appleImage from '../assets/img/card-images/apple.svg';\nimport beatsImage from '../assets/img/card-images/beats.svg';\nimport hpImage from '../assets/img/card-images/hp.svg';\nimport lenovoImage from '../assets/img/card-images/lenovo.svg';\nimport nokiaImage from '../assets/img/card-images/nokia.svg';\nimport intelImage from '../assets/img/card-images/intel.svg';\nimport dellImage from '../assets/img/card-images/dell.svg';\nimport ciscoImage from '../assets/img/card-images/cisco.svg';\nimport htcImage from '../assets/img/card-images/htc.svg';\n\nconst gameCardImages = {\n  android: androidImage,\n  acer: acerImage,\n  apple: appleImage,\n  beats: beatsImage,\n  hp: hpImage,\n  lenovo: lenovoImage,\n  nokia: nokiaImage,\n  intel: intelImage,\n  dell: dellImage,\n  cisco: ciscoImage,\n  htc: htcImage,\n};\n\nexport default gameCardImages;\n","export default __webpack_public_path__ + \"static/media/android.5cea2350.svg\";","export default __webpack_public_path__ + \"static/media/acer.97b43230.svg\";","export default __webpack_public_path__ + \"static/media/apple.e8c87215.svg\";","export default __webpack_public_path__ + \"static/media/beats.338456d2.svg\";","export default __webpack_public_path__ + \"static/media/hp.2435474a.svg\";","export default __webpack_public_path__ + \"static/media/lenovo.025f4804.svg\";","export default __webpack_public_path__ + \"static/media/nokia.4daa5df2.svg\";","export default __webpack_public_path__ + \"static/media/intel.e6451727.svg\";","export default __webpack_public_path__ + \"static/media/dell.39467c58.svg\";","export default __webpack_public_path__ + \"static/media/cisco.20318700.svg\";","export default __webpack_public_path__ + \"static/media/htc.74cbfad7.svg\";","import React from 'react';\nimport './GameCard.scss';\nimport gameCardImages from '../../utils/gameCardImages';\n\nfunction GameCard({ card, index }) {\n  const {\n    isFlipped, name,\n  } = card;\n\n  return (\n    <div id={`card-${index}`} className={`card${isFlipped ? ' card_flipped' : ''}`}>\n      <div className=\"card__shirt\" />\n      <div className=\"card__face\" style={{ backgroundImage: `url(${gameCardImages[name]})` }} />\n      <div className=\"card__shadow\" />\n    </div>\n  );\n}\n\nexport default GameCard;\n","import GameCard from './GameCard';\n\nexport default GameCard;\n","export const PUSH_DATA_CARDS = 'cards/pushData';\nexport const ADD_TO_COMPARE_CARDS = 'cards/addToCompare';\nexport const FLIP_CARD = 'cards/flipCard';\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Playground.scss';\nimport GameCard from '../GameCard';\nimport { flipCard } from '../../store/cards/cardsActions';\n\nfunction Playground({ level }) {\n  const cards = useSelector((state) => state.cards);\n  const grid = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { current } = grid;\n\n    const clickHandler = ({ target }) => {\n      const card = target.closest('.card');\n      if (!card) return;\n\n      const cardId = card.id.split('-')[1];\n\n      dispatch(flipCard(cardId));\n    };\n\n    current.addEventListener('click', clickHandler);\n\n    return () => current.removeEventListener('click', clickHandler);\n  }, [dispatch]);\n\n  return (\n    <div className={`playground playground__level_${level}`} ref={grid}>\n      {cards.list.map((card, index) => <GameCard key={card.id} index={index} card={card} />)}\n    </div>\n  );\n}\n\nexport default Playground;\n","import Playground from './Playground';\n\nexport default Playground;\n","import {\n  FLIP_CARD,\n} from './cardsTypes';\n\nconst flipCard = (index) => {\n  const updateArr = (arr) => {\n    const copiedArr = [...arr];\n\n    copiedArr[index].isFlipped = !copiedArr[index].isFlipped;\n\n    return copiedArr;\n  };\n\n  return {\n    type: FLIP_CARD,\n    payload: updateArr,\n  };\n};\n\nconst a = null;\n\nexport { a, flipCard };\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  getSecondsFromMs,\n  createNicknameValid,\n} from '../../utils/helpers';\nimport gameLevelData from '../../utils/gameLevelData';\nimport Button from '../Button';\nimport { setNicknameToStore } from '../../store/player/playerActions';\nimport { START_REMEMBER } from '../../store/game/gameTypes';\n\n// a\n\nfunction LoginModal() {\n  const gamemode = useSelector((state) => state.gamemode);\n  const [inputValue, setInputValue] = useState('');\n  const [isInputValid, setInputValid] = useState(true);\n  const [isStartTyping, setStartTyping] = useState(false);\n  const [timeToRemember, setTimeToRemember] = useState(0);\n  const [tipText, setTipText] = useState('');\n  const dispatch = useDispatch();\n\n  const setNickname = useCallback(({ target }) => {\n    const { value } = target;\n    const { isCorrectlength, isCorrectSymbol } = createNicknameValid(value);\n\n    setInputValue(value);\n    if (value.length > 2) setStartTyping(true);\n\n    if (!isStartTyping) return;\n\n    if (!isCorrectlength()) {\n      setInputValid(false);\n      setTipText('Length of nickname must contains 3-24 symbols');\n    } else if (!isCorrectSymbol()) {\n      setInputValid(false);\n      setTipText('Nickname contains incorrect symbols');\n    } else setInputValid(true);\n  }, [isStartTyping]);\n\n  const nicknameSubmit = useCallback((e) => {\n    e.preventDefault();\n    const { isCorrectlength, isCorrectSymbol, isNotEmpty } = createNicknameValid(inputValue.trim());\n\n    setStartTyping(true);\n    console.log(inputValue, isCorrectlength(), isCorrectSymbol());\n\n    if (!isNotEmpty()) {\n      setInputValid(false);\n      setTipText('Nickname is required');\n    } else if (isCorrectlength() && isCorrectSymbol() && isNotEmpty()) {\n      setInputValid(true);\n      console.log('true?', isCorrectlength() && isCorrectSymbol());\n    } else setInputValid(false);\n\n    if (isInputValid) {\n      console.log('true?', isCorrectlength() && isCorrectSymbol());\n      dispatch(setNicknameToStore(inputValue.trim()));\n      dispatch({\n        type: START_REMEMBER,\n      });\n      console.log('START');\n    }\n  }, [isInputValid, inputValue, dispatch]);\n\n  useEffect(() => {\n    const msToRemember = gameLevelData[gamemode].rememberTime[1] * 1000;\n    const sec = getSecondsFromMs(msToRemember);\n    setTimeToRemember(sec);\n  }, [gamemode]);\n\n  return (\n    <div className=\"modal__wrapper\">\n      <div className=\"modal__container\">\n        <h4 className=\"modal__title\">Rules</h4>\n        <ol className=\"modal__list\">\n          <li className=\"modal__item\">\n            Enter your nickname and start game. It will be used for saving\n            your results.\n          </li>\n          <li className=\"modal__item\">\n            You have\n            {' '}\n            <b>{timeToRemember}</b>\n            {' '}\n            seconds to remember all cards, before they are all\n            roll over.\n          </li>\n          <li className=\"modal__item\">\n            When the timer starts counting down, you need to find all pairs\n            of the same cards.\n          </li>\n          <li className=\"modal__item\">\n            The game ends when the time is up. Your time will be saved on\n            the leaderboard.\n          </li>\n        </ol>\n      </div>\n      <div className=\"modal__container\">\n        <h4 className=\"modal__title\">Nickname</h4>\n        <form className=\"modal__form\" onSubmit={nicknameSubmit}>\n          <input\n            className={`modal__input${isInputValid ? '' : ' modal__input_invalid'}`}\n            placeholder=\"Enter your nickname\"\n            onChange={setNickname}\n            value={inputValue}\n            spellCheck=\"false\"\n          />\n          <div className=\"modal__button-wrapper\">\n            <Link to=\"/\">\n              <Button variant=\"secondary\">\n                Cancel\n              </Button>\n            </Link>\n            <Button variant=\"primary\" type=\"submit\">Continue</Button>\n          </div>\n        </form>\n        {!isInputValid && <div className=\"modal__container modal__container_absolute\"><p>{tipText}</p></div>}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginModal;\n","import { SET_NICK_PLAYER } from './playerTypes';\n\nconst setNicknameToStore = (value) => {\n  localStorage.setItem('nickname', value);\n\n  return {\n    type: SET_NICK_PLAYER,\n    payload: value,\n  };\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { setNicknameToStore };\n","export default __webpack_public_path__ + \"static/media/game-over.910289ec.svg\";","import React from 'react';\nimport Button from '../Button';\nimport gameOverImage from '../../assets/img/modal-images/game-over.svg';\n\nfunction GameOver({ score }) {\n  return (\n    <div className=\"modal__wrapper\">\n      <div className=\"modal__container\">\n        <img className=\"modal__image\" src={gameOverImage} alt=\"game-over\" />\n        <p className=\"modal__content\">\n          Your score:\n          {' '}\n          <span className=\"modal__score\">{ score }</span>\n        </p>\n      </div>\n      <div className=\"modal__container\">\n        <p className=\"modal__text\">\n          Let&apos;s play again?\n        </p>\n        <div className=\"modal__button-wrapper\">\n          <Button variant=\"secondary\">Back</Button>\n          <Button variant=\"primary\">Play</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GameOver;\n","import React from 'react';\nimport Button from '../Button';\n\nfunction Cancel() {\n  return (\n    <div className=\"modal__wrapper\">\n      <div className=\"modal__container\">\n        <p className=\"modal__text\">\n          Are you sure you want to quit the game?\n        </p>\n        <div className=\"modal__button-wrapper\">\n          <Button variant=\"danger\">Quit</Button>\n          <Button variant=\"primary\">Continue</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cancel;\n","import React from 'react';\n\nfunction overHandler() {\n  const item = document.querySelector('.modal__pause-item');\n  const container = document.querySelector('.modal__pause');\n  item.style.display = 'block';\n  container.classList.add('active');\n}\n\nfunction outHandler() {\n  const item = document.querySelector('.modal__pause-item');\n  const container = document.querySelector('.modal__pause');\n  item.style.display = 'none';\n  container.classList.remove('active');\n}\n\nfunction Pause() {\n  return (\n    <div className=\"modal__wrapper\">\n      <div className=\"modal__container\">\n        <div\n          className=\"modal__pause\"\n          onMouseOver={overHandler}\n          onMouseOut={outHandler}\n          onBlur\n          onFocus\n        >\n          <span className=\"modal__pause-item\" />\n        </div>\n        <p className=\"modal__content\">\n          Press\n          {' '}\n          <div className=\"modal__escape-wr\">\n            <div className=\"modal__escape\">\n              <span className=\"modal__text\">\n                Esc\n              </span>\n            </div>\n          </div>\n          {' '}\n          to continue\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Pause;\n","import React from 'react';\nimport './Modal.scss';\n\nimport LoginModal from './loginModal';\nimport GameOver from './gameOverModal';\nimport Cancel from './cancelModal';\nimport Pause from './pauseModal';\n\nfunction Modal({\n  isLogin, isCancel, isGameOver, isPause, score,\n}) {\n  if (isLogin) {\n    return (\n      <div className=\"modal\">\n        <LoginModal />\n      </div>\n    );\n  }\n  if (isCancel) {\n    return (\n      <div className=\"modal\">\n        <Cancel />\n      </div>\n    );\n  }\n  if (isGameOver) {\n    return (\n      <div className=\"modal\">\n        <GameOver score={score} />\n      </div>\n    );\n  }\n  if (isPause) {\n    return (\n      <div className=\"modal\">\n        <Pause />\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '../../components/Button';\nimport GameInfo from '../../components/GameInfo';\nimport Leaderboard from '../../components/Leaderboard';\nimport Loader from '../../components/Loader/Loader';\nimport Playground from '../../components/Playground';\nimport './Gamepage.scss';\nimport Modal from '../../components/Modal';\n\nfunction Gamepage() {\n  const gamemode = useSelector((state) => state.gamemode);\n  const nickname = useSelector((state) => state.player.nickname);\n  const [isPlay, setPlay] = useState(false);\n\n  console.log('render');\n  return (\n    <>\n      {!nickname && <Modal isLogin />}\n      <div className=\"game\">\n        <div className=\"game__interface\">\n          <GameInfo />\n          <div className=\"game__leaderboard\">\n            <Leaderboard inGame />\n          </div>\n          <div className=\"game__button\">\n            <Button variant=\"danger\" clickHandler={() => setPlay(!isPlay)}>Surrender</Button>\n          </div>\n        </div>\n        <div className=\"game__playground\">\n          <Playground\n            level={gamemode}\n          />\n        </div>\n        <div className=\"game__loader\">\n          <Loader />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Gamepage;\n","import Gamepage from './Gamepage';\n\nexport default Gamepage;\n","import React, { useEffect, useState } from 'react';\nimport './GameLevelCard.scss';\n\nimport gameLevelData from '../../utils/gameLevelData';\nimport Button from '../Button';\nimport { formatGameTime } from '../../utils/helpers';\n\nfunction GameLevelCard({ level, active, onActive }) {\n  const [cardData, setCardData] = useState({});\n  const [time, setTime] = useState('');\n\n  useEffect(() => {\n    setCardData({ ...gameLevelData[level] });\n    setTime(cardData.time ? formatGameTime(...cardData.time) : '');\n  }, [level, cardData.time, setCardData]);\n\n  return (\n    <div className=\"gamelevel\">\n      <div className=\"gamelevel__image_wrapp\">\n        <img\n          className={`gamelevel__image${active ? ' gamelevel__image_active' : ''}`}\n          src={cardData.img}\n          alt={level}\n        />\n      </div>\n      <div className=\"gamelevel__info_wrapp\">\n        <h3 className=\"gamelevel__info\">\n          <span className=\"gamelevel__name\">{level}</span>\n          <span className=\"gamelevel__time\">{time}</span>\n        </h3>\n      </div>\n      <div className=\"gamelevel__button_wrapp\">\n        <Button\n          isCheckbox\n          variant=\"primary\"\n          checked={active}\n          clickHandler={() => onActive(level)}\n        >\n          {cardData.layout}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default GameLevelCard;\n","import GameLevelCard from './GameLevelCard';\n\nexport default GameLevelCard;\n","const GAMEMODE_CHANGE = 'gamemode/change';\n\nexport default GAMEMODE_CHANGE;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Leaderboard from '../../components/Leaderboard';\nimport GameLevelCard from '../../components/GameLevelCard';\nimport Button from '../../components/Button';\nimport './Homepage.scss';\nimport GAMEMODE_CHANGE from '../../store/gamemode/gamemodeTypes';\nimport { CLEAR_TIME_PLAYER } from '../../store/player/playerTypes';\n\nfunction Homepage() {\n  const leaderboard = useSelector((state) => state.leaderboard);\n  const gamemode = useSelector((state) => state.gamemode);\n  const dispatch = useDispatch();\n\n  const selectLevel = useCallback((level) => {\n    dispatch({\n      type: GAMEMODE_CHANGE,\n      payload: level,\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch({\n      type: CLEAR_TIME_PLAYER,\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage__leaderboard-wrapper\">\n        <h1 className=\"homepage__title\">Leaderboard</h1>\n        <Leaderboard leaders={leaderboard.list} inGame={false} />\n      </div>\n      <h3 className=\"homepage__subtitle\">Select the grid size</h3>\n      <div className=\"homepage__level-wrapper\">\n        <GameLevelCard\n          level=\"easy\"\n          active={gamemode === 'easy'}\n          onActive={selectLevel}\n        />\n        <GameLevelCard\n          level=\"medium\"\n          active={gamemode === 'medium'}\n          onActive={selectLevel}\n        />\n        <GameLevelCard\n          level=\"hard\"\n          active={gamemode === 'hard'}\n          onActive={selectLevel}\n        />\n      </div>\n      <div className=\"homepage__button-wrapper\">\n        <Link to=\"/game\">\n          <Button variant=\"large\">\n            Play\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import Homepage from './Homepage';\n\nexport default Homepage;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Gamepage from './pages/Gamepage';\nimport Homepage from './pages/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/game\">\n            <Gamepage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","export const LOADING_LEADERBOARD = 'leaderboard/loading';\nexport const LOADED_LEADERBOARD = 'leaderboard/loaded';\nexport const ERROR_LEADERBOARD = 'leaderboard/error';\nexport const CLEAR_ERROR_LEADERBOARD = 'leaderboard/clearError';\nexport const PUSH_DATA_LEADERBOARD = 'leaderboard/pushData';\n","import {\n  LOADING_LEADERBOARD,\n  LOADED_LEADERBOARD,\n  ERROR_LEADERBOARD,\n  CLEAR_ERROR_LEADERBOARD,\n  PUSH_DATA_LEADERBOARD,\n} from './leaderboardTypes';\n\nconst initialState = {\n  list: [...new Array(50)].map((e, i) => ({\n    id: i,\n    nickname: `Username ${i}`,\n    time: 3000 + (i * 1000),\n  })),\n  isLoading: false,\n  isLoaded: false,\n  isError: false,\n  errorMessage: null,\n};\n\nfunction leaderboardReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING_LEADERBOARD:\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n      };\n    case LOADED_LEADERBOARD:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n      };\n    case ERROR_LEADERBOARD:\n      return {\n        ...state,\n        isError: true,\n        errorMessage: action.payload,\n      };\n    case CLEAR_ERROR_LEADERBOARD:\n      return {\n        ...state,\n        isError: false,\n        errorMessage: null,\n      };\n    case PUSH_DATA_LEADERBOARD:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default leaderboardReducer;\n","import GAMEMODE_CHANGE from './gamemodeTypes';\n\nfunction gamemodeReducer(state = 'easy', action) {\n  switch (action.type) {\n    case GAMEMODE_CHANGE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default gamemodeReducer;\n","import {\n  PUSH_DATA_CARDS,\n  ADD_TO_COMPARE_CARDS,\n  FLIP_CARD,\n} from './cardsTypes';\n\nconst initialState = {\n  compare: [],\n  list: [...new Array(16)].map((el, i) => ({\n    id: i,\n    name: 'apple',\n    isFlipped: false,\n  })),\n};\n\nfunction cardsReducer(state = initialState, action) {\n  switch (action.type) {\n    case PUSH_DATA_CARDS:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    case FLIP_CARD:\n      return {\n        ...state,\n        list: action.payload(state.list),\n      };\n    case ADD_TO_COMPARE_CARDS:\n      return {\n        ...state,\n        compare: [...action.payload(state.compare)],\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cardsReducer;\n","import {\n  SET_NICK_PLAYER,\n  SET_TIME_PLAYER,\n  CLEAR_TIME_PLAYER,\n} from './playerTypes';\n\nconst initialState = {\n  nickname: null,\n  time: null,\n};\n\nfunction playerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NICK_PLAYER:\n      return {\n        ...state,\n        nickname: action.payload,\n      };\n    case SET_TIME_PLAYER:\n      return {\n        ...state,\n        time: action.payload,\n      };\n    case CLEAR_TIME_PLAYER:\n      return {\n        ...state,\n        time: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default playerReducer;\n","import {\n  START_GAME,\n  PAUSE_GAME,\n  END_GAME,\n  SET_TIME_GAME,\n  START_REMEMBER,\n} from './gameTypes';\n\nconst initialState = {\n  isStart: false,\n  isPlaying: false,\n  isPause: false,\n  isGameOver: false,\n  time: null,\n};\n\nfunction gameReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case START_REMEMBER:\n      return {\n        ...state,\n        isStart: true,\n      };\n\n    case START_GAME:\n      return {\n        ...state,\n        isStart: true,\n        isPlaying: true,\n        isPause: false,\n      };\n\n    case PAUSE_GAME:\n      return {\n        ...state,\n        isPlaying: false,\n        isPause: true,\n      };\n\n    case END_GAME:\n      return {\n        ...state,\n        isStart: false,\n        isGameOver: true,\n        isPlaying: false,\n      };\n\n    case SET_TIME_GAME:\n      return {\n        ...state,\n        time: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport leaderboardReducer from './leaderboard/leaderboardReducer';\nimport gamemodeReducer from './gamemode/gamemodeReducer';\nimport cardsReducer from './cards/cardsReducer';\nimport playerReducer from './player/playerReducer';\nimport gameReducer from './game/gameReducer';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  gamemode: gamemodeReducer,\n  leaderboard: leaderboardReducer,\n  cards: cardsReducer,\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}