{"version":3,"sources":["components/Leaderboard/Leaderboard.js","components/Leaderboard/index.js","utils/gameLevelData.js","assets/img/gamemode-images/easy.svg","assets/img/gamemode-images/medium.svg","assets/img/gamemode-images/hard.svg","components/Button/Button.js","components/Button/index.js","components/GameLevelCard/GameLevelCard.js","components/GameLevelCard/index.js","pages/Homepage/Homepage.js","pages/Homepage/index.js","App.js","store/leaderboard/leaderboardTypes.js","store/leaderboard/leaderboardReducer.js","store/gamemode/gamemodeTypes.js","store/gamemode/gamemodeReducer.js","store/cards/cardsTypes.js","store/cards/cardsReducer.js","store/player/playerTypes.js","store/player/playerReducer.js","store/game/gameTypes.js","store/game/gameReducer.js","store/rootReducer.js","store/index.js","index.js"],"names":["Leaderboard","leaders","returnGameTime","useCallback","ms","min","Date","getMinutes","sec","getSeconds","returnSortedArr","sort","a","b","time","className","map","id","nickname","gameLevelData","easy","img","layout","medium","hard","Button","children","clickHandler","variant","isCheckbox","checked","type","onClick","GameLevelCard","level","active","onActive","useState","cardData","setCardData","useEffect","src","alt","classes","Homepage","leaderboard","useSelector","state","list","App","LOADING_LEADERBOARD","LOADED_LEADERBOARD","ERROR_LEADERBOARD","CLEAR_ERROR_LEADERBOARD","PUSH_DATA_LEADERBOARD","initialState","isLoading","isLoaded","isError","errorMessage","leaderboardReducer","action","payload","GAMEMODE_CHANGE","gamemodeReducer","PUSH_DATA_CARDS","ADD_TO_COMPARE_CARDS","compare","cardsReducer","SET_NICK_PLAYER","SET_SCORE_PLAYER","CLEAR_SCORE_PLAYER","score","playerReducer","START_GAME","PAUSE_GAME","RESUME_GAME","END_GAME","SET_TIME_GAME","isPlaying","isPause","isGameOver","gameReducer","rootReducer","combineReducers","player","gamemode","cards","game","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0ce651b.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport './Leaderboard.scss';\n\nfunction Leaderboard({ leaders }) {\n  const returnGameTime = useCallback((ms) => {\n    const min = new Date(ms).getMinutes();\n    const sec = new Date(ms).getSeconds();\n\n    return `${min < 10 ? '0' : ''}${min}:${sec}`;\n  }, []);\n\n  const returnSortedArr = useCallback(() => [...leaders].sort((a, b) => a.time - b.time),\n    [leaders]);\n\n  return (\n    <table className=\"leaderboard\">\n      <thead className=\"leaderboard__head\">\n        <tr>\n          <td className=\"leaderboard__col leaderboard__col_header leaderboard__col_width_sm\">\n            â„–\n          </td>\n          <td className=\"leaderboard__col leaderboard__col_header\">Nickname</td>\n          <td className=\"leaderboard__col leaderboard__col_header leaderboard__col_text_right\">\n            Time\n          </td>\n        </tr>\n      </thead>\n      <tbody className=\"leaderboard__body\">\n        {returnSortedArr().map(({ id, nickname, time }) => (\n          <tr className=\"leaderboard__row\" key={id}>\n            <td className=\"leaderboard__col\" />\n            <td className=\"leaderboard__col\">{nickname}</td>\n            <td className=\"leaderboard__col leaderboard__col_text_right\">\n              {returnGameTime(time)}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Leaderboard;\n","import Leaderboard from './Leaderboard';\n\nexport default Leaderboard;\n","import easyImage from '../assets/img/gamemode-images/easy.svg';\nimport mediumImage from '../assets/img/gamemode-images/medium.svg';\nimport hardImage from '../assets/img/gamemode-images/hard.svg';\n\nconst gameLevelData = {\n  easy: {\n    img: easyImage,\n    time: '01:00',\n    layout: '4x4',\n  },\n  medium: {\n    img: mediumImage,\n    time: '02:20',\n    layout: '8x8',\n  },\n  hard: {\n    img: hardImage,\n    time: '03:50',\n    layout: '14x10',\n  },\n};\n\nexport default gameLevelData;\n","export default __webpack_public_path__ + \"static/media/easy.448b1a60.svg\";","export default __webpack_public_path__ + \"static/media/medium.57b2e366.svg\";","export default __webpack_public_path__ + \"static/media/hard.b4764cca.svg\";","import React from 'react';\nimport './Button.scss';\n\nfunction Button({\n  children, clickHandler, variant, isCheckbox, checked,\n}) {\n  return (\n    <button className={`button button__${variant}`} type=\"button\" onClick={clickHandler}>\n      {isCheckbox && (\n        <div className=\"button__box\">\n          <div className={`button__checkbox ${checked ? 'active' : ''}`} />\n          {children}\n        </div>\n      )}\n      {!isCheckbox && children}\n    </button>\n  );\n}\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import React, { useEffect, useState } from 'react';\nimport './GameLevelCard.scss';\n\nimport gameLevelData from '../../utils/gameLevelData';\nimport Button from '../Button';\n\nfunction GameLevelCard({ level, active, onActive }) {\n  const [cardData, setCardData] = useState({});\n\n  useEffect(() => {\n    setCardData({ ...gameLevelData[level] });\n  }, [level, setCardData]);\n\n  return (\n    <div className=\"gamelevel\">\n      <div className=\"gamelevel__image_wrapp\">\n        <img\n          className={`gamelevel__image${active ? ' gamelevel__image_active' : ''}`}\n          src={cardData.img}\n          alt={level}\n        />\n      </div>\n      <div className=\"gamelevel__info_wrapp\">\n        <h3 className=\"gamelevel__info\">\n          <span className=\"gamelevel__name\">{level}</span>\n          <span className=\"gamelevel__time\">{cardData.time}</span>\n        </h3>\n      </div>\n      <div className=\"gamelevel__button_wrapp\">\n        <Button\n          isCheckbox\n          classes=\"primary\"\n          checked={active}\n          clickHandler={() => onActive(level)}\n        >\n          {cardData.layout}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default GameLevelCard;\n","import GameLevelCard from './GameLevelCard';\n\nexport default GameLevelCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Leaderboard from '../../components/Leaderboard';\nimport GameLevelCard from '../../components/GameLevelCard';\nimport Button from '../../components/Button';\nimport './Homepage.scss';\n\nfunction Homepage() {\n  const leaderboard = useSelector((state) => state.leaderboard);\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage__leaderboard-wrapper\">\n        <h1 className=\"homepage__title\">Leaderboard</h1>\n        <Leaderboard leaders={leaderboard.list} />\n      </div>\n      <h3 className=\"homepage__subtitle\">Select the grid size</h3>\n      <div className=\"homepage__level-wrapper\">\n        <GameLevelCard level=\"easy\" />\n        <GameLevelCard level=\"medium\" />\n        <GameLevelCard level=\"hard\" />\n      </div>\n      <div className=\"homepage__button-wrapper\">\n        <Button variant=\"large\">Play</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","import Homepage from './Homepage';\n\nexport default Homepage;\n","import React from 'react';\nimport Homepage from './pages/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n\n  );\n}\n\nexport default App;\n","export const LOADING_LEADERBOARD = 'leaderboard/loading';\nexport const LOADED_LEADERBOARD = 'leaderboard/loaded';\nexport const ERROR_LEADERBOARD = 'leaderboard/error';\nexport const CLEAR_ERROR_LEADERBOARD = 'leaderboard/clearError';\nexport const PUSH_DATA_LEADERBOARD = 'leaderboard/pushData';\n","import {\n  LOADING_LEADERBOARD,\n  LOADED_LEADERBOARD,\n  ERROR_LEADERBOARD,\n  CLEAR_ERROR_LEADERBOARD,\n  PUSH_DATA_LEADERBOARD,\n} from './leaderboardTypes';\n\nconst initialState = {\n  list: [\n    {\n      id: 1,\n      nickname: 'Username',\n      time: 1327536135417,\n    },\n    {\n      id: 3,\n      nickname: 'nick',\n      time: 1327536265417,\n    },\n    {\n      id: 2,\n      nickname: 'user',\n      time: 1327536140417,\n    },\n    {\n      id: 4,\n      nickname: 'nickName',\n      time: 1327536161417,\n    },\n    {\n      id: 5,\n      nickname: '_nickname_123',\n      time: 1327536177417,\n    },\n    {\n      id: 6,\n      nickname: 'asd',\n      time: 1327536196417,\n    },\n  ],\n  isLoading: false,\n  isLoaded: false,\n  isError: false,\n  errorMessage: null,\n};\n\nfunction leaderboardReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING_LEADERBOARD:\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n      };\n    case LOADED_LEADERBOARD:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n      };\n    case ERROR_LEADERBOARD:\n      return {\n        ...state,\n        isError: true,\n        errorMessage: action.payload,\n      };\n    case CLEAR_ERROR_LEADERBOARD:\n      return {\n        ...state,\n        isError: false,\n        errorMessage: null,\n      };\n    case PUSH_DATA_LEADERBOARD:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default leaderboardReducer;\n","const GAMEMODE_CHANGE = 'gamemode/change';\n\nexport default GAMEMODE_CHANGE;\n","import GAMEMODE_CHANGE from './gamemodeTypes';\n\nfunction gamemodeReducer(state = 'easy', action) {\n  switch (action.type) {\n    case GAMEMODE_CHANGE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default gamemodeReducer;\n","export const PUSH_DATA_CARDS = 'cards/pushData';\nexport const ADD_TO_COMPARE_CARDS = 'cards/addToCompare';\n","import {\n  PUSH_DATA_CARDS,\n  ADD_TO_COMPARE_CARDS,\n} from './cardsTypes';\n\nconst initialState = {\n  compare: [],\n  list: [],\n};\n\nfunction cardsReducer(state = initialState, action) {\n  switch (action.type) {\n    case PUSH_DATA_CARDS:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    case ADD_TO_COMPARE_CARDS:\n      return {\n        ...state,\n        compare: [...action.payload(state.compare)],\n      };\n    default:\n      return state;\n  }\n}\n\nexport default cardsReducer;\n","export const SET_NICK_PLAYER = 'player/setNickname';\nexport const SET_SCORE_PLAYER = 'player/setScore';\nexport const CLEAR_SCORE_PLAYER = 'player/clearScore';\n","import {\n  SET_NICK_PLAYER,\n  SET_SCORE_PLAYER,\n  CLEAR_SCORE_PLAYER,\n} from './playerTypes';\n\nconst initialState = {\n  nickname: null,\n  score: null,\n};\n\nfunction playerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NICK_PLAYER:\n      return {\n        ...state,\n        nickname: action.payload,\n      };\n    case SET_SCORE_PLAYER:\n      return {\n        ...state,\n        score: action.payload,\n      };\n    case CLEAR_SCORE_PLAYER:\n      return {\n        ...state,\n        score: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default playerReducer;\n","export const START_GAME = 'game/start';\nexport const PAUSE_GAME = 'game/pause';\nexport const RESUME_GAME = 'game/resume';\nexport const END_GAME = 'game/gameOver';\nexport const SET_TIME_GAME = 'game/setTime';\n","import {\n  START_GAME,\n  PAUSE_GAME,\n  RESUME_GAME,\n  END_GAME,\n  SET_TIME_GAME,\n} from './gameTypes';\n\nconst initialState = {\n  isPlaying: false,\n  isPause: false,\n  isGameOver: false,\n  time: null,\n};\n\nfunction gameReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case START_GAME:\n      return {\n        ...state,\n        isPlaying: true,\n      };\n\n    case PAUSE_GAME:\n      return {\n        ...state,\n        isPlaying: false,\n        isPause: true,\n      };\n\n    case RESUME_GAME:\n      return {\n        ...state,\n        isPause: false,\n        isPlaying: true,\n      };\n\n    case END_GAME:\n      return {\n        ...state,\n        isGameOver: true,\n        isPlaying: false,\n      };\n\n    case SET_TIME_GAME:\n      return {\n        ...state,\n        time: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport leaderboardReducer from './leaderboard/leaderboardReducer';\nimport gamemodeReducer from './gamemode/gamemodeReducer';\nimport cardsReducer from './cards/cardsReducer';\nimport playerReducer from './player/playerReducer';\nimport gameReducer from './game/gameReducer';\n\nconst rootReducer = combineReducers({\n  player: playerReducer,\n  gamemode: gamemodeReducer,\n  leaderboard: leaderboardReducer,\n  cards: cardsReducer,\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}